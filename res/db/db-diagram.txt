Table User {
  id uuid [primary key]
  
  name text
  email text [unique]
  phone_number text [unique]
  avatar_url text [ref: - Storage.id]
  password_hash text
  rating numeric(3, 2)
  liked_cards uuid[]

  top_categories Category[] [ref: > Category.id]
  top_attributes text[] [ref: > Category.attributes]
  
  created_at timestamp
  updated_at timestamp
}

Table Storage {
  id uuid [primary key]
  
  object file [not null]

  created_at timestamp

  Note: 'Store in S3 storage'
}

Table UserSession {
  token text [primary key]
  user_id uuid [ref: - User.id]
  
  user_agent text
  ip_address text
  
  created_at timestamp
  expires_at timestamp
}

Table Category {
  id uuid [primary key]
  
  name text
  attributes json
  subcategories Category[]

  Note: 'Store categories hierarchy in mongodb document, each category has specific attributes'
}

Table Card {
  id uuid [primary key]
  
  title text
  description text
  price numeric(16, 2)
  address geography
  image_urls text[] [ref: > Storage.id]
  category_path Category[] [ref: - Category.id, note: 'Store path to category in mongodb document']
  attributes json [note: 'Store values of attributes described in category document of mongodb']
  
  is_hidden bool [default: true, note: 'Card is not hidden after successful moderation']
  
  created_at timestamp
  updated_at timestamp
}

Table CardSearch {
  id uuid [primary key]
  card_id uuid [ref: - Card.id]
  
  title text
  description text
  category Category[]
  attributes json
}

Table Review {
  id uuid [primary key]
  user_id uuid [ref: > User.id]
  
  object_type text [note: 'user, card']
  object_id uudi [ref: > User.id, ref: > Card.id]
  
  body text
  rating numeric(3, 2)
  image_urls text[] [ref: > Storage.id]
  
  created_at timestamp
  updated_at timestamp
}

Table Event {
  id uuid [primary key]
  user_id uuid [ref: > User.id]
  card_id uuid [ref: > Card.id]
  
  event_type text [note: 'view, like']
  extra json [note: 'Extra event data']
  
  created_at timestamp
}

Table DWH {
  id uuid [primary key]
  user_id uuid [ref: > User.id]
  
  object_id uuid [null]
  object_type text [note: 'card, review, category, etc.']
  
  event_type text [note: 'view, like, review, purchase']
  extra json [note: 'Extra event data']
  
  created_at timestamp
}

Table UserMetrics {
  id uuid [primary key]
  user_id uuid [ref: > User.id]
  
  views int
  likes int
  reviews int
  deals int
  cards_posted int
  cards_sold int
  reports_received int
}

Table CardMetrics {
  id uuid [primary key]
  card_id uuid [ref: > Card.id]
  
  views int
  likes int
  reviews int
  reports_received int
}

Table ModerationQueue {
  id uuid [primary key]
  item_id uuid [note: 'Card/Review id']
  
  item_type text [note: 'card, review']
  user_id uuid [ref: > User.id]
  content text [note: 'Card/Review text']
  image_urls text[] [ref: > Storage.id]
  
  created_at timestamp
  updated_at timestamp
}

Table ModerationResult {
  id uuid [primary key]
  item_id uuid [ref: > ModerationQueue.item_id, ref: > Card.id, ref: > Review.id]
  
  status text [note: 'approved, rejected']
  rejection_reason text [null]
  
  created_at timestamp
  updated_at timestamp
}

Table Chat {
  id uuid [primary key]

  last_messages ChatMessage[]

  created_at timestamp
  updated_at timestamp
}

Table ChatMessage {
  id uuid [primary key]
  chat_id uuid [ref: > Chat.id]
  
  sender_id uuid [ref: > User.id]
  receiver_id uuid [ref: > User.id]

  body text [not null]
  attachment_urls text[] [ref: > Storage.id]
  is_edited bool [default: false]

  created_at timestamp
  updated_at timestamp
}

Table ChatMessageBuffer {
  message_id uuid [primary key, ref: - ChatMessage.id]
  chat_id uuid [ref: > Chat.id]
  
  sender_id uuid [ref: > User.id]
  receiver_id uuid [ref: > User.id]

  body text [not null]
  attachment_urls text[] [ref: > Storage.id]
}
